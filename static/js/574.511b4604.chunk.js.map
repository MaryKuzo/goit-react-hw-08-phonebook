{"version":3,"file":"static/js/574.511b4604.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Container/Container.js","components/views/LoginView/LoginView.jsx"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import loginBG from '../../../images/Login.jpg';\nimport * as React from 'react';\nimport { StyledButton } from 'GlobalStyles.styled';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport * as authOperations from '../../../redux/auth/auth-operations';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      align=\"center\"\n       style={{\n        position: 'fixed',\n        bottom: '0',\n         width: '100%',\n        right: '50px',\n      }}\n      {...props}\n    >\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"https://\" fontFamily={'Ephesis'}>\n          PhoneBookðŸ“±\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\nconst handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default: return;\n    }\n  };\n\nconst handleSubmit = e => {\n  e.preventDefault();\n\n  if (!email.trim() || !password.trim()) {\n    toast.error(\"Please enter both email and password.\");\n    return;\n  }\n\n  dispatch(authOperations.logIn({ email, password }));\n  setEmail('');\n  setPassword('');\n};\n\n  return (\n    <ThemeProvider theme={theme} >\n      <div\n        style={{\n          backgroundImage: `url(${loginBG})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'revert',\n          backgroundPosition: 'bottom right',\n          minHeight: '100vh',\n          backgroundColor: '#e7cb09',\n        }}\n\n      >\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              paddingTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              fontFamily={'Ephesis'}\n              style={{ fontSize: '36px' }}>\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n\n            >\n              <TextField\n\n            \n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={handleChange}\n                value={email}\n                InputLabelProps={{\n                  style: {\n                    fontFamily: 'Ephesis',\n                    color: 'rgb(131, 109, 10)',\n                  },\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n                value={password}\n                InputLabelProps={{\n                  style: {\n                    fontFamily: 'Ephesis',\n                    color: 'rgb(131, 109, 10)',\n                  },\n                }}\n              />\n\n              <StyledButton\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </StyledButton>\n              <Grid container>\n                <Grid item>\n                  <Link\n                    href=\"/goit-react-hw-08-phonebook/register\"\n                    color=\"#000000\"\n                  >\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Copyright sx={{ mt: 8, mb: 4 }} />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default LoginView;\n"],"names":["createContainer","createStyledComponent","styled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemeProps","inProps","Copyright","Typography","align","style","position","bottom","width","right","Link","color","href","fontFamily","Date","getFullYear","theme","createTheme","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","value","ThemeProvider","backgroundImage","loginBG","backgroundRepeat","backgroundSize","backgroundPosition","minHeight","backgroundColor","component","CssBaseline","Box","sx","paddingTop","display","flexDirection","alignItems","fontSize","onSubmit","e","preventDefault","trim","authOperations","toast","noValidate","TextField","margin","required","fullWidth","id","label","type","autoComplete","autoFocus","onChange","InputLabelProps","variant","mt","mb","Grid","container","item"],"sourceRoot":""}