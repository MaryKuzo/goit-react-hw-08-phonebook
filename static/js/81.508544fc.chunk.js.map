{"version":3,"file":"static/js/81.508544fc.chunk.js","mappings":"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","sources":["components/Contacts/PhoneBook.styled.jsx","components/Contacts/Contacts/Contacts.styled.jsx","components/Contacts/ContactItems/ContactItems.styled.jsx","components/Contacts/ContactItems/ContactItems.jsx","components/Contacts/Contacts/Contacts.jsx","components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/Modal/Modal.styled.jsx","components/Contacts/NavBar/NavBar.styled.jsx","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/utils/utils.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/NavBar/NavBar.jsx","components/Contacts/PhoneBook.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100vw;\n  padding-bottom: 2vh;\n  padding-top: 2vh;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  color: white;\n  height: 100vh;\n  margin-top: 60px;\n`;\n","import styled from '@emotion/styled';\n// import Button from '@mui/material/Button';\n\nexport const StyledContList = styled.ul`\n  width: 480px;\n  overflow-y: scroll;\nborder-radius: 30px;\n  border: 4px solid wheat;\n  border-radius: 6px;\n  padding: 0;\n`;\n","import styled from '@emotion/styled';\n\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { MdDeleteOutline, MdAutoDelete } from 'react-icons/md';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const ContactLi = styled.li`\n  font-family: Pacifico, serif;\n  font-size: 36px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  border: 4px solid #eeb338;\n  border-radius: 30px;\n  width: 300px;\n`;\n\nexport const ContactText = styled.p`\n  font-family: Pacifico, serif;\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  font-family: Pacifico, serif;\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #f1c40f;\n  color: black;\n  font-size: 16px;\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #eeb338;\n  }\n`;\n\n\nexport const StyledItem = styled.li`\n  display: flex;\n  margin-top: 10px;\n  transition: 500ms;\n\n  justify-content: space-between;\n  padding:20px;\n\n  outline: none;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(204, 204, 204, 0.65);\n  }\n\n  }\n`;\nexport const TextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 65%;\n`;\nexport const StyledButton = styled.button`\n  display: block;\n  width: 70px;\n  margin-left: 5px;\n  background-color: transparent;\n  border-color: transparent;\n  border-radius: 6px;\n  color: transparent;\n  transition: 500ms;\n  visibility: hidden;\n  &[disabled] {\n    border-color: gray !important;\n    background-color: #f5deb385 !important;\n  }\n  &.show {\n    visibility: visible;\n    transition: 500ms;\n    background-color: #726885;\n    color: wheat;\n    border-color: black;\n\n    &:hover,\n    :focus {\n      background-color: #7f7197;\n      color: white;\n      border-color: wheat;\n    }\n  }\n`;\nexport const DeleteIcon = styled(AiFillDelete)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n  border-radius: 50%;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const EditIcon = styled(FaUserEdit)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const PreDeleteIcon = styled(MdDeleteOutline)`\n  height: 22px;\n  width: 22px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const PreEditIcon = styled(AiFillEdit)`\n  height: 25px;\n  width: 25px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const DeleteOnLoadIcon = styled(MdAutoDelete)`\n  height: 25px;\n  width: 25px;\n  fill: #fff;\n  margin-right: 35px;\n`;\n","import {\n  StyledItem,\n\n  TextBox,\n  DeleteIcon,\n\n  PreDeleteIcon,\n\n  DeleteOnLoadIcon,\n} from './ContactItems.styled';\n\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/createApi';\n\nimport PropTypes from 'prop-types';\n\n\nexport const ContactItem = ({ contact }) => {\n\n  const { name, number, id } = contact;\n  const [show, setShow] = useState(false);\n\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n\n\n  const onEnter = e => {\n    e.currentTarget.classList.add('vissible');\n    e.currentTarget.id === contact.id && setShow(true);\n  };\n\n  const handleDelete = e => {\n    deleteContact(e.currentTarget.parentElement.id);\n  };\n\n  const onBlur = e => {\n    document\n      .querySelectorAll('.vissible')\n      .forEach(n => n.classList.remove('vissible'));\n    setShow(false);\n  };\n\n  return (\n    <>\n      <StyledItem\n        id={id}\n        onClick={onEnter}\n        onFocus={onEnter}\n        onBlur={onBlur}\n        tabIndex={1}\n      >\n        <TextBox>\n          <span>{name}</span>\n          <span>{number}</span>\n        </TextBox>\n        {isLoading ? (\n          <DeleteOnLoadIcon />\n        ) : show ? (\n          <DeleteIcon onClick={handleDelete} />\n        ) : (\n          <PreDeleteIcon />\n        )}\n      </StyledItem>\n\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  filteredContacts: PropTypes.array,\n  contacts: PropTypes.array,\n  modalSelector: PropTypes.string,\n  modalIdSelector: PropTypes.number,\n};\n","import { StyledContList } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\nimport PropTypes from 'prop-types';\n\nimport { ContactItem } from '../ContactItems/ContactItems';\nimport { useMemo } from 'react';\n\nexport const Contacts = () => {\n  const filter = useSelector(getFilter);\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(contact => {\n      return contact.name\n        .toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase());\n    });\n  }, [contacts, filter]);\n\n  const shownContacts = filter !== '' ? filteredContacts : contacts;\n\n  return (\n    <StyledContList>\n      {shownContacts.map(contact => {\n        return <ContactItem contact={contact} key={contact.id} />;\n      })}\n    </StyledContList>\n  );\n};\n\nContacts.propTypes = {\n  filteredContacts: PropTypes.array,\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin-top: 10px;\n  font-family: Ephesis;\n  font-size: 26px;\n`;\n\nexport const StyledImput = styled.input`\n  margin-left: 10px;\n  border-radius: 6px;\n  background-color: wheat;\n  width: 200px;\n  \n`;\n","import { StyledLabel, StyledImput } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const inputHandler = e => {\n    const { value } = e.currentTarget;\n    dispatch(filterContact(value));\n  };\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <>\n      {contacts?.length !== 0 ? (\n        <>\n          <h2>Contacts:</h2>\n          <StyledLabel>\n            Find my contacts by name\n            <StyledImput type=\"text\" name=\"filter\" onChange={inputHandler} />\n          </StyledLabel>\n        </>\n      ) : (\n        <h2>Contact list is empty:</h2>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\n// export const ModalOverlay = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50% -50%);\n//   /* overflow: hidden; */\n\n//   z-index: 2;\n// `;\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0%;\n  right: 0%;\n  left: 0%;\n  bottom: 0%;\n  background-color: #787566df;\n  z-index: 1;\n  overflow: hidden;\n  padding-top: 100px;\n`;\n","import styled from '@emotion/styled';\nexport const PhoneBookHeader = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const PhoneBookBox = styled.div`\n  margin-bottom: 20px;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  border: 1px solid wheat;\n  border-radius: 6px;\n  padding: 20px;\n\n\n`;\nexport const Item = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  border-radius: 30px;\n  background-color: wheat;\n  margin-top: 10px;\n  height: 30px;\n`;\n\nexport const FormBox = styled.div`\n  /* position: relative; */\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CloseButton = styled.button`\ndisplay: flex;\nalign-items: center;\n    justify-content: center;\nborder-style: none;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 20px;\n  height: 20px;\n  background-color: black;\n  border-radius: 30px;\n  color: #c49f00;\n  &:hover,\n  :focus {\n    background-color: #c49f00;\n    color: black;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .max(12)\n    .required(),\n});\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  StyledForm,\n  Item,\n  FormBox,\n  CloseButton,\n} from './ContactForm.styled';\nimport { StyledButton } from 'GlobalStyles.styled';\nimport { notify, isContactDubled, schema } from '../utils/utils';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\nimport { useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\n\nexport const ContactForm = ({\n  mutator,\n  initialFormValues,\n  btn1,\n  id,\n  name,\n}) => {\n  const dispatch = useDispatch();\n\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (\n      (isContactDubled(contacts, values, 'name') ||\n        isContactDubled(contacts, values, 'number')) &&\n      name === 'AddContact'\n    ) {\n      notify();\n      return;\n    }\n    try {\n      await mutator({ id, ...values });\n      resetForm();\n      dispatch(selector(false));\n    } catch (error) {\n      console.log(error);\n      dispatch(selector(false));\n    }\n  };\n\n  return (\n    <FormBox>\n      <ToastContainer />\n      <Formik\n        initialValues={initialFormValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ handleReset }) => (\n          <StyledForm>\n            <label htmlFor=\"\" style={{\n              marginBottom: '10px',\n              fontFamily: 'Ephesis',\n              fontSize:'20px',\n            }}>\n              Name\n              <Item type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" />\n            </label>\n            <label htmlFor=\"\" style={{\n              marginBottom: '10px',\n              fontFamily: 'Ephesis',\n              fontSize:'20px',\n            }}>\n              Number\n              <Item type=\"tel\" name=\"number\" />\n              <ErrorMessage name=\"number\" />\n            </label>\n            <StyledButton type=\"submit\">{btn1}</StyledButton>\n          </StyledForm>\n        )}\n      </Formik>\n      <CloseButton onClick={e => dispatch(selector(false))}>\n       x\n      </CloseButton>\n    </FormBox>\n  );\n};\n\nContactForm.propTypes = {\n  values: PropTypes.object,\n  contacts: PropTypes.array,\n  mutator: PropTypes.func,\n  initialFormValues: PropTypes.object,\n  btn1: PropTypes.string,\n  btn2: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n","import { useCreateContactMutation } from 'redux/contacts/createApi';\nimport { BackDrop } from '../Modal/Modal.styled';\nimport { PhoneBookHeader, PhoneBookBox } from './NavBar.styled';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\nimport { RiUserAddLine } from 'react-icons/ri';\nimport { StyledButton } from 'GlobalStyles.styled';\n\nexport const NavBar = () => {\n  const modalSelector = useSelector(state => state.modal.selector);\n  const dispatch = useDispatch();\n  const [addContact] = useCreateContactMutation();\n\n  const addContactModal = e => {\n    dispatch(selector('add'));\n  };\n\n  return (\n    <PhoneBookBox>\n      <PhoneBookHeader>Phonebook</PhoneBookHeader>\n      {!modalSelector && (\n\n        <StyledButton\n          variant=\"contained\"\n          endIcon={<RiUserAddLine />}\n          color=\"primary\"\n          onClick={addContactModal}\n        >\n          Add Contact\n        </StyledButton>\n      )}\n      {modalSelector === 'add' && (\n        <BackDrop>\n          <ContactForm\n            mutator={addContact}\n            initialFormValues={{ name: '', number: '' }}\n            btn1=\"Add Contact\"\n            name=\"AddContact\"\n          />\n        </BackDrop>\n      )}\n    </PhoneBookBox>\n  );\n};\n\nNavBar.propTypes = {\n  modalSelector: PropTypes.string,\n};\n","\nimport { Container } from './PhoneBook.styled';\nimport { Contacts } from './Contacts/Contacts';\nimport { Filter } from './Filter/Filter';\nimport { NavBar } from './NavBar/NavBar';\n\n\nconst PhoneBook = () => {\n  return (\n    <Container>\n      <NavBar />\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n};\nexport default PhoneBook;\n"],"names":["Container","styled","StyledContList","StyledItem","TextBox","DeleteIcon","AiFillDelete","PreDeleteIcon","FaUserEdit","MdDeleteOutline","DeleteOnLoadIcon","AiFillEdit","MdAutoDelete","ContactItem","contact","name","number","id","useState","show","setShow","useDeleteContactMutation","deleteContact","isLoading","onEnter","e","currentTarget","classList","add","onClick","onFocus","onBlur","document","querySelectorAll","forEach","n","remove","tabIndex","parentElement","Contacts","filter","useSelector","getFilter","useGetContactsQuery","data","contacts","filteredContacts","useMemo","toLocaleLowerCase","includes","shownContacts","map","StyledLabel","StyledImput","Filter","dispatch","useDispatch","length","type","onChange","value","filterContact","BackDrop","PhoneBookHeader","PhoneBookBox","StyledForm","Form","Item","Field","FormBox","CloseButton","isContactDubled","arr","key","some","schema","yup","shape","matches","required","max","ContactForm","mutator","initialFormValues","btn1","handleSubmit","values","resetForm","toast","position","autoClose","selector","console","log","initialValues","onSubmit","validationSchema","handleReset","htmlFor","style","marginBottom","fontFamily","fontSize","NavBar","modalSelector","state","modal","useCreateContactMutation","addContact","variant","endIcon","color"],"sourceRoot":""}